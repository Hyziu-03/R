# załadownie bibliotek
install.packages("editData")
install.packages("dplyr")
install.packages("nycflights13")
install.packages("ggplot2")
library(dplyr)
library(ggplot2)
library(nycflights13)

# praca z danymi dot. diamentów
diamonds
View(diamonds)
filter(diamonds, color == "D")
best_color_diamonds <- filter(diamonds, color == "D")
best_color_diamonds
View(best_color_diamonds)
filter(diamonds, cut >= "Good")
best_cut_diamonds <- filter(diamonds, cut >= "Good")
best_cut_diamonds
str(diamonds)

# praca z biblioteką nycflights13
filter(flights, month = 2, day = 3)
filter(flights, month == 2, day == 3)
flights[flights$month == 2 & flights & day == 3, ]
flights[flights$month == 2 & flights$day == 3, ]
feb_third_flights <- flights[flights$month == 2 & flights$day == 3, ]
feb_third_flights
subset(flights, month == 2 & day == 3)
subset(flights, month == 2 & day == 3) == feb_third_flights

# uzyskanie maksyalnej liczby wierszy do wypisania
getOption("max.print")
max_print <- getOption("max.print")
max_print

# praca z biblioteką flights
View(flights)
subset(flights, dep_time > 1700)
evening_flights <- subset(flights, dep_time > 1700)
evening_flights
evening_flights <- subset(flights, dep_time > 1700 & month == 6)
evening_flights
evening_flights_june <- evening_flights
evening_flights_june
subset(flights, dep_time < 600 | arr_tmie < 600)
subset(flights, dep_time < 600 | arr_time < 600)
morning_flights <- subset(flights, dep_time < 600 | arr_time < 600)
morning_flights
subset(flights, arr_time < dep_time)
filter(flights, dep_time > arr_time)
flights[flights$dep_time > flights$arr_time]
flights[flights$dep_time > flights$arr_time, ]
filter(flights, dep_time > arr_time)
subset(flights, arr_time < dep_time)
flights[flights$dep_time > flights$arr_time, ]
flights[flights$dep_time > flights$arr_time, ]
flights
flights[flights$dep_time > flights$arr_time, ]
subset(flights, arr_time < dep_time)
filter(flights, dep_time > arr_time)
na.omit(flights[flights$dep_time > flights$arr_time, ])
filter(flights, dep_time > arr_time)
na.omit(filter(flights, dep_time > arr_time))
filter(flights, dep_time > arr_time)
na.omit(subset(flights, arr_time < dep_time))

# funckje slice(), arrange() i distinct()
slice(flights, 100:200)
slice(10000:10010)
slice(flights, 10000:10010)
arrange(flights, dep_delay)
arrange(flights, desc(dep_delay))
arrange(flights, -dep_delay)
arrange(flights, -dep_delay) == arrange(flights, desc(dep_delay))
arrange(flights, -dep_delay)
flights[order(desc(flights$dep_delay)), ]
flights[order(desc(flights$dep_delay), decreasing = TRUE), ]
View(select, flights, carrier)
View(select(flights, carrier))
select(flights, carrier)
distinct(select(flights, carrier))
distinct(flights, carrier)
distinct(flights, carrier) == distinc(select(flights, carrier))
distinct(flights, carrier) == distinct(select(flights, carrier))
distinct(flights, carrier)
distinct(flights, origin)
distinct(flights, dest)
distinct(flights, origin)
speed <- mutate(flights, ave_speed = distance * 1.6 / (air_time / 60))
View(speed)
speed
select()
select(mutate(
    flights, average_speed = distance * 1.6 / (air_time / 60)
), origin, dest, average_speed)
select(flights, dest = "KRK")
select(flights, dest = "WAW")

# praca z plikiem krakow_balice_t.txt
setwd("~/GitHub/R/AGH/16-marca/Dane")
krakow_balice <- read.delim("~/GitHub/R/AGH/16-marca/Dane/krakow_balice_t.txt")
View(krakow_balice)
fall_months <- select(mutate(
    krakow_balice, jesien = (IX + X + XI) / 3), rok, IX, X, XI, jesien
)
fall_months
View(fall_months)
fall_months <- round(select(mutate(
    krakow_balice, jesien = (IX + X + XI) / 3), rok, IX, X, XI, jesien)
)
fall_months
fall_months <- round(select(
    mutate(krakow_balice, jesien = (IX + X + XI) / 3), rok, IX, X, XI, jesien
), 1)
fall_months <- round(select(
    mutate(krakow_balice, jesien = (IX + X + XI) / 3), rok, IX, X, XI, jesien
), 2)
fall_months
select(fall_months$jesien > 10)
subset(fall_months, jesien > 10)
flights_month <- group_by(flights, month)
flights_month

# pracaz danymi z nycflights13
summarise(flights_month, average_distance = mean(distance, na.rm = TRUE))
avg_dist <- summarise(
    flights_month, average_distance = mean(distance, na.rm = TRUE)
)
avg_dist
arrange(avg_dist)
arrange(desc(avg_dist))
avg_dist
arrange(avg_dist, -average_distance)

# praca z bazą danych o gryzoniach
db <- read.csv("~/GitHub/R/AGH/16-marca/Dane/combined.csv")
View(db)
db
rodents <- filter(combined, taxa == "Rodent")
rodents <- filter(db, taxa == "Rodent")
rodents
genuses <- group_by(db, genus)
genuses
View(genuses)
genuses
summarise(genuses, average_weight = mean(weight, na.rm = TRUE))
experiment <- na..omit(summarise(
    genuses, average_weight = mean(weight, na.rm = TRUE))
)
experiment <- na.omit(summarise(
    genuses, average_weight = mean(weight, na.rm = TRUE))
)
experiment
arrange(experiment, average_weight)
arrange(experiment, -average_weight)
rodents_foot <- (mutate(rodents, species_full = paste(genus, species)))
View(rodents_foot)
full_name <- rodents_foot
full_name
View(full_name)
species <- group_by(full_name, species_full)
summarise(species, ave_hindfoot = mean(hindfoot_length, na.rm = TRUE))
arrange(spcies, ave_hindfoot)
View(summarise(species, ave_hindfoot = mean(hindfoot_length, na.rm = TRUE)))
savehistory("C:/Users/szymo/Documents/23-marca.Rhistory")
