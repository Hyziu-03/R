library(dplyr)
library(ggplot2)
View(diamonds)
ggplot(diamonds, aes(cut)) + geom_bar()
ggplot(diamonds, aes(cut)) + geom_bar(aes(fill=cut)) + scale_fill_manual(values=c("blue", "green", "yellow", "orange", "red"))
str(diamonds)
ggplot(diamonds,aes(cut)) + geom_histogram(stat="count", aes(fill=cut))
ggplot(diamonds, aes(cut)) + geom_bar(aes(fill=cut)) + scale_fill_manual(values=c("blue", "green", "yellow", "orange", "red"))
str(diamonds)
str(cut)
str(diamonds, cut)
str(diamonds)
diamonds$cut
str(diamonds$cut)
str(diamonds)
ggplot(diamonds,aes(cut))+ geom_histogram(stat="count", aes(fill=cut))
ggplot(diamonds, aes(cut)) + geom_histogram(stat="count")
diamonds %>% count(cut)
str(diamonds)
ggplot(diamonds, aes(color) + geom_histogram(stat="count")
)
ggplot(diamonds, aes(color))+geom_bar()
diamonds %>% count(color)
ggplot(diamonds, aes(clarity))+geom_bar()
diamonds %>% count(clarity)
ggplot(diamonds, aes(color))+geom_bar()
str(diamonds$carat)
ggplot(diamonds, aes(carat))+geom_histogram()
ggplot(diamonds, aes(carat))+geom_histogram(binwidth=.25)
ggplot(diamonds, aes(carat))+geom_histogram(binwidth=1)
ggplot(diamonds, aes(carat))+geom_histogram(binwidth=.25)
ggplot(diamonds, aes(carat))+geom_histogram(binwidth=.12)
ggplot(diamonds, aes(carat))+geom_histogram(binwidth=0.5)
diamonds %>% count(cut_width(carat, 0.5))
diamonds %>% count(cut_width(carat, 0.25))
diamonds %>% count(cut_width(carat, 0.5))
diamonds %>% count(cut_width(carat, 0.75))
diamonds %>% count(cut_width(carat, 0.25))
diamonds %>% count(cut_width(carat, 0.25))
ggplot(diamonds, aes(carat))+geom_histogram(binwidth = 0.5, boundary=min(diamonds$carat))
diamonds %>%
count(cut_width(carat, 0.5, boundary=min(diamonds$carat)))
carat_do_3 <- diamonds %>% filter(carat < 3)
carat_do_3
ggplot(carat_do_3, aes(carat))+ geom_histogram(binwidth=0.1, boundary=min(diamonds$carat))
ggplot(diamonds, aes(carat))+ geom_histogram(breaks=seq(min(diamonds$carat), 3, by=0.1))
ggplot(carat_do_3, aes(carat))+ geom_histogram(binwidth=0.1, boundary=min(diamonds$carat))
ggplot(diamonds, aes(carat))+ geom_histogram(breaks=seq(min(diamonds$carat), 3, by=0.1))
ggplot(diamonds, aes(carat))+ geom_histogram(breaks=seq(min(diamonds$carat), 3, by=0.1))
carat_do_3 %>% count(cut_width(carat, 0.1, boundary=min(diamonds$carat)))
ggplot(diamonds, aes(carat))+ geom_histogram(breaks=seq(min(diamonds$carat), 3, by=0.1))
ggplot(diamonds, aes(carat))+ geom_histogram(breaks=seq(min(diamonds$carat), 3, by=0.01))
ggplot(diamonds, aes(price)) + geom_histogram()
ggplot(diamonds, aes(price)) + geom_histogram(bins = 100)
ggplot(diamonds, aes(price)) + geom_histogram(bins = 200)
ggplot(diamonds, aes(price)) + geom_histogram(bins = 300)
ggplot(diamonds, aes(price)) + geom_histogram(bins = 100)
ggplot(diamonds, aes(price)) + geom_histogram(bins = 200)
ggplot(diamonds, aes(price)) + geom_histogram(bins = 10)
ggplot(diamonds, aes(price)) + geom_histogram(bins = 12)
ggplot(diamonds, aes(price)) + geom_histogram(bins = 500)
ggplot(diamonds, aes(price)) + geom_histogram(bins = 12)
plot(function(x) dnorm(x), -4, 4, main = "Funkcja prawdopodobienstwa N(0,1)", col = "red", ylab = "Prawdp.")
plot(function(x) dnorm(x), -4, 4, main = "Funkcja prawdopodobieństwa N(0,1)", col = "red", ylab = "Prawdopodobieństwo")
plot(function(x) pnorm(x), -4, 4, main = "Dystrybuanta rozkladu N(0,1)", col = "red", ylab = "Prawd.")
plot(function(x) dnorm(x), -4, 4, main = "Funkcja prawdopodobieństwa N(0,1)", col = "red", ylab = "Prawdopodobieństwo")
ggplot(diamonds, aes(price))+
geom_histogram(aes(y=..density..), col="red",fill="green")+
geom_density(col=2, size=1)
ggplot(diamonds, aes(price))+geom_histogram(aes(y=after_stat(density)), col="red",fill="green")+geom_density(col=2, size=1)
ggplot(diamonds, aes(price))+geom_histogram(aes(y=after_stat(density)), col="red",fill="green", binwidth=2)+geom_density(col=2, size=1)
ggplot(diamonds, aes(price))+geom_histogram(aes(y=after_stat(density)), col="red",fill="green", binwidth=20)+geom_density(col=2, size=1)
ggplot(diamonds, aes(price))+geom_histogram(aes(y=after_stat(density)), col="red",fill="green", binwidth=50)+geom_density(col=2, size=1)
ggplot(diamonds, aes(price))+geom_histogram(aes(y=after_stat(density)), col="red",fill="green", binwidth=75)+geom_density(col=2, size=1)
ggplot(diamonds, aes(price))+geom_histogram(aes(y=after_stat(density)), col="red",fill="green", binwidth=150)+geom_density(col=2, size=1)
ggplot(diamonds, aes(price))+geom_histogram(aes(y=after_stat(density)), col="red",fill="green", binwidth=300)+geom_density(col=2, size=1)
View(faithful)
str(faithful)
ggplot(faithful,aes(eruptions))+ geom_histogram(aes(y=..density..),binwidth=0.25)+ geom_density(col=2, size=1)
ggplot(faithful,aes(eruptions))+
geom_histogram(aes(y=..density..),binwidth=0.25)+
geom_density(col=2, size=1)
faithful %>% count(cut_width(eruptions, 0.25))
ggplot(faithful,aes(waiting))+
geom_histogram(aes(y=..density..),binwidth=0.25)+
geom_density(col=2, size=1)
ggplot(faithful,aes(waiting))+
geom_histogram(aes(y=..density..),binwidth=5)+
geom_density(col=2, size=1)
ggplot(faithful,aes(waiting))+
geom_histogram(aes(y=..density..),binwidth=3)+
geom_density(col=2, size=1)
ggplot(faithful, aes(eruptions, waiting)) + geom_point()
ggplot(faithful, aes(eruptions, waiting)) + geom_point(poistion="jitter")
ggplot(faithful, aes(eruptions, waiting)) + geom_point(position="jitter")
ggplot(faithful, aes(eruptions, waiting)) + geom_point()
ggplot(faithful, aes(eruptions, waiting)) + geom_point() + geom_smooth(method="lm")
savehistory("C:/Users/szymo/Documents/GitHub/R/Skrypty/20-kwietnia.Rhistory")
